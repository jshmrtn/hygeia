<div class="component-auto_tracing-resolve_problems container">
  <Context get={HygeiaWeb, auth: auth}>
    <HygeiaWeb.PersonLive.Header person={@case.person} id="header" />

    <div class="card">
      <div class="card-header">
        <HygeiaWeb.CaseLive.Navigation case={@case} id="navigation" />
      </div>
      <div class="card-body hy-readonly-form">
        <h2 class="mb-3">{pgettext("Auto Tracing Resolve Problems", "Overview")}</h2>
        <div class="form-group">
          <div class="row">
            <div class="col">
              <div>
                {pgettext("Auto Tracing Resolve Problems", "Current Step")}
              </div>
              <div class="value">
                {AutoTracing.Step.translate(@auto_tracing.current_step)}
              </div>
            </div>

            <div class="col">
              <div>
                {pgettext("Auto Tracing Resolve Problems", "Last Completed Step")}
              </div>
              <div class="value">
                {case @auto_tracing.last_completed_step do
                  nil -> nil
                  step -> AutoTracing.Step.translate(step)
                end}
              </div>
            </div>
            <div class="col">
              <div>
                {pgettext("Auto Tracing Resolve Problems", "Last Change")}
              </div>
              <div class="value">
                <HygeiaWeb.RelativeTime
                  time={@auto_tracing.updated_at}
                  id="auto_tracing_updated_at"
                  component_id="auto_tracing_updated_at"
                />
              </div>
            </div>
          </div>
        </div>

        <h2 class="mb-3 mt-5">{pgettext("Auto Tracing Resolve Problems", "Problems")}</h2>

        {#case @auto_tracing.problems}
          {#match []}
            <div class="alert alert-success">
              {pgettext("Auto Tracing Resolve Problems", "No Problems detected.")}
            </div>
          {#match problems}
            <div
              :for={problem <- problems}
              class={"mb-3 card problem-card", solved: problem in @auto_tracing.solved_problems}
              :id={"auto_tracing_problem_#{problem}"}
            >
              <details open>
                <summary class="card-header d-flex align-items-center justify-content-between">
                  <strong>{AutoTracing.Problem.translate(problem)}</strong>
                  <span :if={problem in @auto_tracing.solved_problems}>
                    <span class="oi oi-check" aria-hidden="true" />
                  </span>

                  <button
                    :on-click="resolve"
                    phx-value-problem={problem}
                    class="btn btn-sm btn-danger"
                    :if={problem not in @auto_tracing.solved_problems}
                  >
                    <span class="oi oi-trash" aria-hidden="true" />
                  </button>
                </summary>

                <div class="card-body">
                  {#if problem in @auto_tracing.solved_problems}
                    {pgettext("Auto Tracing Resolve Problems", "Problem solved")}
                  {#else}
                    {#case problem}
                      {#match :covid_app}
                        <p>{pgettext("Auto Tracing Resolve Problems", "Send a SwissCovid App Code to the person.")}</p>

                        <button :on-click="resolve" phx-value-problem={problem} class="btn btn-primary">
                          {pgettext("Auto Tracing Resolve Problems", "Done")}
                        </button>
                      {#match :unmanaged_tenant}
                        <p>
                          <strong>{pgettext("Auto Tracing Resolve Problems", "Tracer")}:</strong>
                          {pgettext("Auto Tracing Resolve Problems", "Report case to your supervisor.")}
                        </p>
                        <p>
                          <strong>{pgettext("Auto Tracing Resolve Problems", "Supervisor")}:</strong>
                          {pgettext(
                            "Auto Tracing Resolve Problems",
                            "Report case to the appropriate authority and delete person & case."
                          )}
                        </p>

                        <p>
                          <strong>{pgettext("Auto Tracing Resolve Problems", "Residency Address")}:</strong>
                          <span :if={@case.person.address}>{Address.to_string(@case.person.address, :long)}</span>
                        </p>

                        <p :if={@case.monitoring != nil and @case.monitoring.address != nil}>
                          <strong>{pgettext("Auto Tracing Resolve Problems", "Monitoring Address")}:</strong>
                          {Address.to_string(@case.monitoring.address, :long)}
                        </p>

                        <button
                          class="btn btn-danger"
                          :if={authorized?(@case.person, :delete, auth)}
                          :on-click="delete_person"
                        >
                          {pgettext("Auto Tracing Resolve Problems", "Delete Person")}
                        </button>
                      {#match :possible_transmission}
                        {#if not Enum.empty?(@case.received_transmissions)}
                          <p>{pgettext("Auto Tracing Resolve Problems", "Existing Transmissions")}:</p>
                          <div class="hy-card-grid-2-cols">
                            {#for transmission <- @case.received_transmissions}
                              <div class="card card-body">
                                <dl>
                                  <dt>{schema_field_name(:type, Transmission)}</dt>
                                  <dd>
                                    {PossibleIndexType.translate(transmission.type)}
                                  </dd>
                                  <dt>{schema_field_name(:date, Transmission)}</dt>
                                  <dd>
                                    {case transmission.date do
                                      nil -> nil
                                      %Date{} = date -> HygeiaCldr.Date.to_string!(date)
                                    end}
                                  </dd>
                                  {#if infection_place = transmission.infection_place}
                                    <dt>{schema_field_name(:name, Transmission.InfectionPlace)}</dt>
                                    <dd>{infection_place.name}</dd>
                                    <dt>{schema_field_name(:type, Transmission.InfectionPlace)}</dt>
                                    <dd :if={infection_place.type}>{translate_infection_place_type(infection_place.type)}</dd>
                                    {#if infection_place.type == :flight}
                                      <dt>{schema_field_name(:flight_information, Transmission.InfectionPlace)}</dt>
                                      <dd>{infection_place.flight_information}</dd>
                                    {/if}
                                    <dt>{schema_field_name(:address, Transmission.InfectionPlace)}</dt>
                                    <dd :if={infection_place.address}>{Address.to_string(infection_place.address, :long)}</dd>
                                  {/if}
                                </dl>
                                <dl>
                                  <dt>{schema_field_name(:propagator_internal, Transmission)}</dt>
                                  <dd>
                                    {case transmission.propagator_internal do
                                      nil -> gettext("No propagator")
                                      true -> gettext("Internal")
                                      false -> gettext("External")
                                    end}
                                  </dd>
                                  {#if transmission.propagator_case_uuid}
                                    <dt>{schema_field_name(:propagator_case, Transmission)}</dt>
                                    <dd>{transmission.propagator.first_name} {transmission.propagator.last_name}</dd>
                                  {/if}
                                  {#if transmission.propagator_ism_id}
                                    <dt>{schema_field_name(:propagator_ism_id, Transmission)}</dt>
                                    <dd>{transmission.propagator_ism_id}</dd>
                                  {/if}
                                </dl>
                                <Link
                                  to={Routes.transmission_show_path(@socket, :show, transmission.uuid)}
                                  opts={target: "_blank", rel: "noopener noreferrer"}
                                >
                                  {gettext("Open transmission in new tab")}
                                </Link>
                              </div>
                            {/for}
                          </div>
                        {/if}

                        <p class="my-3">{pgettext("Auto Tracing Resolve Problems", "Possible Transmission")}:</p>

                        <div class="card card-body mb-3">
                          <div class="hy-card-grid-2-cols">
                            <dl>
                              <dt>{schema_field_name(:date, Transmission)}</dt>
                              <dd>
                                {case Ecto.Changeset.fetch_field!(@possible_transmission_changeset, :date) do
                                  nil -> nil
                                  %Date{} = date -> HygeiaCldr.Date.to_string!(date)
                                end}
                              </dd>
                              {#if infection_place = Ecto.Changeset.fetch_field!(@possible_transmission_changeset, :infection_place)}
                                <dt>{schema_field_name(:name, Transmission.InfectionPlace)}</dt>
                                <dd>{infection_place.name}</dd>
                                <dt>{schema_field_name(:type, Transmission.InfectionPlace)}</dt>
                                <dd :if={infection_place.type}>{translate_infection_place_type(infection_place.type)}</dd>
                                {#if infection_place.type == :flight}
                                  <dt>{schema_field_name(:flight_information, Transmission.InfectionPlace)}</dt>
                                  <dd>{infection_place.flight_information}</dd>
                                {/if}
                                <dt>{schema_field_name(:address, Transmission.InfectionPlace)}</dt>
                                <dd :if={infection_place.address}>{Address.to_string(infection_place.address, :long)}</dd>
                              {/if}
                            </dl>
                            <div :if={@auto_tracing.propagator_known} class="card">
                              <div class="card-header">{pgettext("Auto Tracing Resolve Problems", "Provided Propagator")}</div>
                              <div class="card-body">
                                <p>
                                  {@auto_tracing.propagator.first_name}
                                  {@auto_tracing.propagator.last_name}
                                </p>
                                <dl>
                                  <dt>{schema_field_name(:phone, AutoTracing.Propagator)}</dt>
                                  <dd>
                                    <Link :if={@auto_tracing.propagator.phone} to={phone_to_uri(@auto_tracing.propagator.phone)}>{@auto_tracing.propagator.phone}</Link>
                                  </dd>
                                  <dt>{schema_field_name(:email, AutoTracing.Propagator)}</dt>
                                  <dd>
                                    <Link :if={@auto_tracing.propagator.email} to={"mailto:#{@auto_tracing.propagator.email}"}>{@auto_tracing.propagator.email}</Link>
                                  </dd>
                                  <dt>{schema_field_name(:address, AutoTracing.Propagator)}</dt>
                                  <dd :if={@auto_tracing.propagator.address}>{Address.to_string(@auto_tracing.propagator.address, :long)}</dd>
                                </dl>
                                <Form
                                  for={@possible_transmission_changeset}
                                  change="possible_transmission_change"
                                  as={:possible_transmission}
                                  submit="possible_transmission_submit"
                                >
                                  <HiddenInput field={:type} />
                                  <Field name={:propagator_internal} class="form-group">
                                    <div class="btn-group btn-group-toggle btn-radio-group">
                                      <label class="input-group-text input-sm">{gettext("Propagator")}:</label>
                                      <label class={
                                        "btn",
                                        "btn-outline-primary",
                                        active: Ecto.Changeset.get_field(@possible_transmission_changeset, :propagator_internal) == nil
                                      }>
                                        <RadioButton value="" />
                                        {gettext("No propagator")}
                                      </label>
                                      <label class={
                                        "btn",
                                        "btn-outline-primary",
                                        active: Ecto.Changeset.get_field(@possible_transmission_changeset, :propagator_internal) == true
                                      }>
                                        <RadioButton value="true" />
                                        {gettext("Internal")}
                                      </label>
                                      <label class={
                                        "btn",
                                        "btn-outline-primary",
                                        active:
                                          Ecto.Changeset.get_field(@possible_transmission_changeset, :propagator_internal) == false
                                      }>
                                        <RadioButton value="false" />
                                        {gettext("External")}
                                      </label>
                                    </div>
                                    <ErrorTag class="d-block invalid-feedback" />
                                  </Field>
                                  <Field
                                    name={:propagator_ism_id}
                                    class="form-group"
                                    :if={Ecto.Changeset.get_field(@possible_transmission_changeset, :propagator_internal) == false}
                                  >
                                    <HygeiaWeb.FieldLabel />
                                    <TextInput class="form-control" />
                                    <ErrorTag class="d-block invalid-feedback" />
                                  </Field>
                                  <Field
                                    name={:propagator_case_uuid}
                                    class="form-group"
                                    :if={Ecto.Changeset.get_field(@possible_transmission_changeset, :propagator_internal) == true}
                                  >
                                    <HygeiaWeb.FieldLabel />
                                    <HygeiaWeb.CaseLive.Choose
                                      id="possible_transmission_propagator_case"
                                      change="change_possible_transmission_propagator_case"
                                    />
                                    <ErrorTag class="d-block invalid-feedback" />
                                  </Field>
                                </Form>
                              </div>
                            </div>
                          </div>
                          <div class="mt-3">
                            <button
                              :on-click="create_transmission"
                              class="btn btn-primary"
                              phx-disable-with={gettext("Saving...")}
                              disabled={not @possible_transmission_changeset.valid?}
                            >
                              {gettext("Create Transmission")}
                            </button>
                          </div>
                        </div>

                        <button :on-click="resolve" phx-value-problem={problem} class="btn btn-primary">
                          {pgettext("Auto Tracing Resolve Problems", "Done")}
                        </button>
                        <div :if={@auto_tracing.propagator_known}>
                          <p>
                            {@auto_tracing.propagator.first_name}
                            {@auto_tracing.propagator.last_name}
                          </p>
                          <dl>
                            <dt>{gettext("Phone")}</dt>
                            <dd>{@auto_tracing.propagator.phone}</dd>
                            <dt>{gettext("Email")}</dt>
                            <dd>{@auto_tracing.propagator.email}</dd>
                            <dt>{gettext("Address")}</dt>
                            <dd :if={@auto_tracing.propagator.address}>{Address.to_string(@auto_tracing.propagator.address, :long)}</dd>
                          </dl>
                        </div>
                      {#match :new_employer}
                        <div class="hy-card-grid-2-cols">
                          <div
                            :for={affiliation <- Enum.sort_by(@person.affiliations, & &1.uuid, :asc)}
                            class="card card-body"
                          >
                            {#case affiliation}
                              {#match %Affiliation{unknown_organisation: nil, organisation: nil, comment: comment}
                                when is_binary(comment)}
                                <strong>{gettext("Comment")}:</strong>
                                <h6>{comment}</h6>
                              {#match %Affiliation{unknown_organisation: %Entity{} = unknown_organisation, organisation: nil}}
                                <strong>{unknown_organisation.name}</strong>
                                <div class="mb-3" :if={unknown_organisation.address}>{Address.to_string(unknown_organisation.address, :long)}</div>
                                <Form for={@occupation_form}>
                                  <Field name={:organisation_uuid}>
                                    <HygeiaWeb.OrganisationLive.Choose
                                      id={"affiliation_#{affiliation.uuid}_organisation"}
                                      change="select_affiliation_organisation"
                                      subject={affiliation.uuid}
                                    />
                                  </Field>
                                </Form>
                                <div class="mt-2"><strong>{pgettext("Auto Tracing Resolve Problems", "Division")}:</strong></div>
                              {#match %Affiliation{unknown_organisation: nil, organisation: %Organisation{} = organisation}}
                                <strong>{organisation.name}</strong>
                                <div class="mb-3" :if={organisation.address}>{Address.to_string(organisation.address, :long)}</div>
                                <div class="mt-2"><strong>{pgettext("Auto Tracing Resolve Problems", "Division")}:</strong></div>
                            {/case}

                            {#case affiliation}
                              {#match %Affiliation{unknown_organisation: nil, organisation: nil}}
                              {#match %Affiliation{
                                  unknown_organisation: _unknown_organisation,
                                  organisation: _organisation,
                                  division: nil,
                                  unknown_division: nil
                                }}
                                <div>{pgettext("Auto Tracing Resolve Problems", "Division not provided.")}</div>
                              {#match %Affiliation{
                                  unknown_organisation: %Entity{},
                                  organisation: nil,
                                  division: nil,
                                  unknown_division: %Entity{} = unknown_division
                                }}
                                <div class="my-2">{pgettext(
                                    "Auto Tracing Resolve Problems",
                                    "You must resolve the organisation before choosing the right division."
                                  )}</div>
                                <div>
                                  {pgettext("Auto Tracing Resolve Problems", "Title")}:
                                  {unknown_division.name}
                                </div>
                                <div class="mb-3" :if={unknown_division.address}>
                                  {pgettext("Auto Tracing Resolve Problems", "Address")}:
                                  {Address.to_string(unknown_division.address, :long)}
                                </div>
                              {#match %Affiliation{
                                  unknown_organisation: nil,
                                  organisation: %Organisation{},
                                  division: %Division{} = division,
                                  unknown_division: nil
                                }}
                                <div>
                                  {pgettext("Auto Tracing Resolve Problems", "Name")}:
                                  {division.title}
                                </div>
                                <div class="mb-3">
                                  {pgettext("Auto Tracing Resolve Problems", "Address")}:
                                  {division.shares_address
                                  |> if do
                                    affiliation.organisation.address
                                  else
                                    division.address
                                  end
                                  |> case do
                                    nil -> pgettext("Auto Tracing Resolve Problems", "Not provided")
                                    %Address{} = address -> Address.to_string(address, :long)
                                  end}
                                </div>
                              {#match %Affiliation{
                                  unknown_organisation: nil,
                                  organisation: %Organisation{},
                                  division: nil,
                                  unknown_division: %Entity{} = unknown_division
                                }}
                                <div>
                                  {pgettext("Auto Tracing Resolve Problems", "Name")}:
                                  {unknown_division.name}
                                </div>
                                <div class="mb-3" :if={unknown_division.address}>
                                  {pgettext("Auto Tracing Resolve Problems", "Address")}:
                                  {Address.to_string(unknown_division.address, :long)}
                                </div>

                                <Form for={@occupation_form}>
                                  <Field name={:division_uuid}>
                                    <HygeiaWeb.DivisionLive.Choose
                                      id={"affiliation_#{affiliation.uuid}_organisation_division"}
                                      change="select_organisation_division"
                                      subject={affiliation.uuid}
                                      organisation={affiliation.organisation}
                                    />
                                  </Field>
                                </Form>
                            {/case}
                          </div>
                        </div>
                      {#match :school_related}
                        <p>{pgettext(
                            "Auto Tracing Resolve Problems",
                            "This person visited the following educational institutions in the 48 hours before the onset of symptoms or 48 hours before the test"
                          )}:</p>
                        <div class="hy-card-grid-2-cols">
                          {#for visit <- @case.visits}
                            <div class="card card-body">
                              {#if organisation = visit.organisation || visit.unknown_organisation}
                                <strong>{organisation.name}</strong>
                                <small :if={visit.organisation} class="d-block text-muted">
                                  {Organisation.type_name(visit.organisation)}
                                </small>
                                <small class="d-block text-muted" :if={organisation.address}>{Address.to_string(organisation.address, :long)}</small>
                                <div>
                                  {pgettext("Auto Tracing Resolve Problems", "Visit reason")}:
                                  {Hygeia.OrganisationContext.Visit.Reason.translate(visit.reason)}
                                </div>
                                <div class="mb-3">
                                  {pgettext("Auto Tracing Resolve Problems", "Date of last visit")}:
                                  {HygeiaCldr.Date.to_string!(visit.last_visit_at)}
                                </div>
                              {/if}

                              <div class="mt-2"><strong>{pgettext("Auto Tracing Resolve Problems", "Division")}:</strong></div>

                              {#case {visit.division, visit.unknown_division}}
                                {#match {nil, nil}}
                                  <div>{pgettext("Auto Tracing Resolve Problems", "Division not provided.")}</div>
                                {#match {%Division{} = division, nil}}
                                  <div>
                                    {pgettext("Auto Tracing Resolve Problems", "Name")}:
                                    {division.title}
                                  </div>
                                  <div class="mb-3">
                                    {pgettext("Auto Tracing Resolve Problems", "Address")}:
                                    {division.shares_address
                                    |> if do
                                      visit.organisation.address
                                    else
                                      division.address
                                    end
                                    |> case do
                                      nil -> pgettext("Auto Tracing Resolve Problems", "Not provided")
                                      %Address{} = address -> Address.to_string(address, :long)
                                    end}
                                  </div>
                                {#match {nil, %Entity{} = unknown_division}}
                                  <div>
                                    {pgettext("Auto Tracing Resolve Problems", "Name")}:
                                    {unknown_division.name}
                                  </div>
                                  <div class="mb-3" :if={unknown_division.address}>
                                    {pgettext("Auto Tracing Resolve Problems", "Address")}:
                                    {Address.to_string(unknown_division.address, :long)}
                                  </div>
                              {/case}
                            </div>
                          {/for}
                        </div>
                        <button :on-click="resolve" phx-value-problem={problem} class="btn btn-primary mt-2">
                          {pgettext("Auto Tracing Resolve Problems", "Done")}
                        </button>
                      {#match :high_risk_country_travel}
                        {#if @auto_tracing.has_travelled_in_risk_country}
                          <p>{pgettext(
                              "Auto Tracing Resolve Problems",
                              "This person travelled in the following high risk countries"
                            )}:</p>
                          <div class="hy-card-grid-2-cols mb-2">
                            <div
                              :for={{travel, transmission} <-
                                get_risk_travels_zip(@auto_tracing.travels, @case.received_transmissions)}
                              class={["card card-body d-flex flex-row", "border-success": not is_nil(transmission)]}
                            >
                              <div>
                                <div>{pgettext("Auto Tracing Resolve Problems", "Country")}:<strong>
                                    {country_name(travel.country)}</strong></div>
                                <div>{pgettext("Auto Tracing Resolve Problems", "Date of last departure")}: {HygeiaCldr.Date.to_string!(travel.last_departure_date)}</div>
                                <Link
                                  :if={transmission}
                                  to={Routes.transmission_show_path(@socket, :show, transmission)}
                                  opts={target: "_blank", rel: "noopener noreferrer"}
                                >
                                  {gettext("Open transmission in new tab")}
                                </Link>
                              </div>
                              <div class="ms-auto">
                                {#if transmission}
                                  <span class="oi oi-check" />
                                {#else}
                                  <LiveRedirect
                                    class="btn btn-primary"
                                    to={Routes.transmission_create_path(@socket, :create,
                                      type: :travel,
                                      date: Date.to_iso8601(travel.last_departure_date),
                                      recipient_internal: true,
                                      recipient_case_uuid: @case.uuid,
                                      infection_place: %{
                                        known: true,
                                        type: :flight,
                                        address: %{country: travel.country}
                                      },
                                      return_url: Routes.auto_tracing_resolve_problems_path(@socket, :resolve_problems, @case.uuid)
                                    )}
                                  >
                                    {gettext("Create transmission")}
                                  </LiveRedirect>
                                {/if}
                              </div>
                            </div>
                          </div>
                          <button :on-click="resolve" phx-value-problem={problem} class="btn btn-primary">
                            {pgettext("Auto Tracing Resolve Problems", "Done")}
                          </button>
                        {/if}
                      {#match :flight_related}
                        <p>{pgettext(
                            "Auto Tracing Resolve Problems",
                            "This person took the following flights"
                          )}:</p>
                        <div class="hy-card-grid-2-cols mb-2">
                          <div :for={flight <- @auto_tracing.flights}>
                            <div>{pgettext("Auto Tracing Resolve Problems", "Flight number")}:<strong>
                                {flight.flight_number}</strong></div>
                            <div>{pgettext("Auto Tracing Resolve Problems", "Flight date")}: {HygeiaCldr.Date.to_string!(flight.flight_date)}</div>
                            <div>{pgettext("Auto Tracing Resolve Problems", "Place of departure")}: {flight.departure_place}</div>
                            <div>{pgettext("Auto Tracing Resolve Problems", "Place of arrival")}: {flight.arrival_place}</div>
                            <div>{pgettext("Auto Tracing Resolve Problems", "Seat number")}: {flight.seat_number}</div>
                            <div>{pgettext("Auto Tracing Resolve Problems", "Wore a mask during the whole flight?")} {if flight.wore_mask, do: gettext("Yes"), else: gettext("No")}</div>
                          </div>
                        </div>
                        <button :on-click="resolve" phx-value-problem={problem} class="btn btn-primary">
                          {pgettext("Auto Tracing Resolve Problems", "Done")}
                        </button>
                      {#match :residency_outside_country}
                        <p>{pgettext("Auto Tracing Resolve Problems", "Report case to your supervisor.")}</p>
                        <button :on-click="resolve" phx-value-problem={problem} class="btn btn-primary">
                          {pgettext("Auto Tracing Resolve Problems", "Done")}
                        </button>
                      {#match :no_contact_method}
                        <p>{pgettext("Auto Tracing Resolve Problems", "Initiate Auto Tracing after getting a contact method.")}</p>
                        <ul>
                          <li>
                            {pgettext("Auto Tracing Resolve Problems", "Assign the case to yourself.")}
                          </li>
                          <li>
                            {pgettext(
                              "Auto Tracing Resolve Problems",
                              "Call the existing number (if there is one) to get a mobile number or e-mail address."
                            )}
                          </li>
                          <li>
                            {pgettext("Auto Tracing Resolve Problems", "If there is no number, try to get it from the doctor.")}
                          </li>
                          <li>
                            {pgettext(
                              "Auto Tracing Resolve Problems",
                              "Add the mobile number or e-mail address to the person data."
                            )}
                          </li>
                          <li>
                            {pgettext("Auto Tracing Resolve Problems", "Send the Auto Tracing invitation.")}
                          </li>
                          <li>
                            {pgettext("Auto Tracing Resolve Problems", "Assign the case back to the case administration.")}
                          </li>
                        </ul>
                        <button :on-click="resolve" phx-value-problem={problem} class="btn btn-primary">
                          {pgettext("Auto Tracing Resolve Problems", "Done")}
                        </button>
                      {#match :no_reaction}
                        <p>{pgettext("Auto Tracing Resolve Problems", "Make sure person is traced correctly.")}</p>
                        <ul>
                          <li>
                            {pgettext("Auto Tracing Resolve Problems", "Assign the case to yourself.")}
                          </li>
                          <li>
                            {pgettext(
                              "Auto Tracing Resolve Problems",
                              "Call the existing number (if there is one) or send them an e-mail to find out why they did not react."
                            )}
                          </li>
                          <li>
                            {pgettext(
                              "Auto Tracing Resolve Problems",
                              "If necessary, trace the person while on the phone. If the person is willing to continue in Auto Tracing mode, make a note and assign it back to the case administration."
                            )}
                          </li>
                        </ul>
                        <button :on-click="resolve" phx-value-problem={problem} class="btn btn-primary">
                          {pgettext("Auto Tracing Resolve Problems", "Done")}
                        </button>
                      {#match :possible_index_submission}
                        <p>{pgettext(
                            "Auto Tracing Resolve Problems",
                            "Make sure all possible index submissions are persisted."
                          )}</p>
                        <ul>
                          <li>
                            {pgettext("Auto Tracing Resolve Problems", "Assign the case to yourself.")}
                          </li>
                          <li>
                            {pgettext("Auto Tracing Resolve Problems", "Check and apply all possible index submissions.")}
                          </li>
                          <li>
                            {pgettext("Auto Tracing Resolve Problems", "Assign the case back to the case admininistration.")}
                          </li>
                        </ul>
                        <LiveRedirect
                          class="btn btn-primary"
                          to={Routes.possible_index_submission_index_path(@socket, :index, @case)}
                        >
                          {gettext("Submit contact persons")}
                        </LiveRedirect>
                        <button :on-click="resolve" phx-value-problem={problem} class="btn btn-primary">
                          {pgettext("Auto Tracing Resolve Problems", "Done")}
                        </button>
                    {/case}
                  {/if}
                </div>
              </details>
            </div>
        {/case}
      </div>
    </div>
  </Context>
</div>
