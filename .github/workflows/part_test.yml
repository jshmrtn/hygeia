on:
  workflow_call:
    inputs:
      elixirVersion:
        required: true
        type: string
      otpVersion:
        required: true
        type: string
    secrets:
      CACHE_VERSION:
        required: true

name: "Test"

env:
  BUILD_EMBEDDED: true

jobs:
  format:
    name: Check Formatting

    runs-on: ubuntu-latest

    env:
      MIX_ENV: dev

    steps:
      - uses: actions/checkout@v3
      - uses: erlef/setup-elixir@v1
        id: setupBEAM
        with:
          otp-version: ${{ inputs.otpVersion }}
          elixir-version: ${{ inputs.elixirVersion }}
      - uses: actions/cache@v2
        with:
          path: deps
          key: deps-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-${{ steps.setupBEAM.outputs.elixir-version }}-${{ hashFiles('mix.lock') }}
          restore-keys: |
            deps-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-${{ steps.setupBEAM.outputs.elixir-version }}-
      - run: mix deps.get
      - uses: actions/cache@v2
        with:
          path: _build/test
          key: compile-${{ env.MIX_ENV }}-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-${{ steps.setupBEAM.outputs.elixir-version }}-${{ hashFiles('mix.lock') }}
          restore-keys: |
            compile-${{ env.MIX_ENV }}-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-${{ steps.setupBEAM.outputs.elixir-version }}-
      - run: mix deps.compile
      - run: mix format --check-formatted

  test:
    name: Run Tests & Submit Coverage

    runs-on: ubuntu-latest

    env:
      MIX_ENV: test
      SECRET_KEY_BASE: invalid
      WEB_IAM_CLIENT_ID: invalid
      WEB_IAM_CLIENT_SECRET: invalid
      IAM_SERVICE_ACCOUNT_USER_SYNC_LOGIN: invalid
      SEDEX_SENDER_ID: TX-XXXXX-XX
      IAM_ORGANISATION_ID: invalid
      IAM_PROJECT_ID: invalid
      DATABASE_USER: runner
      DATABASE_PASSWORD: runner
      DATABASE_NAME: hygeia
      DATABASE_HOST: localhost

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: hygeia
          POSTGRES_USER: runner
          POSTGRES_PASSWORD: runner
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3
      - uses: erlef/setup-elixir@v1
        id: setupBEAM
        with:
          otp-version: ${{ inputs.otpVersion }}
          elixir-version: ${{ inputs.elixirVersion }}
      - uses: actions/cache@v2
        with:
          path: deps
          key: deps-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-${{ steps.setupBEAM.outputs.elixir-version }}-${{ hashFiles('mix.lock') }}
          restore-keys: |
            deps-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-${{ steps.setupBEAM.outputs.elixir-version }}-
      - run: mix deps.get
      - uses: actions/cache@v2
        with:
          path: _build/test
          key: compile-${{ env.MIX_ENV }}-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-${{ steps.setupBEAM.outputs.elixir-version }}-${{ hashFiles('mix.lock') }}
          restore-keys: |
            compile-${{ env.MIX_ENV }}-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-${{ steps.setupBEAM.outputs.elixir-version }}-
      - run: mix deps.compile
      - run: mix compile --warning-as-errors
      - run: |
          sudo apt-get update -yqq
          sudo apt-get install -y wkhtmltopdf poppler-utils
      - run: mix ecto.create
        env:
          DATABASE_PORT: ${{ job.services.postgres.ports[5432] }}
      - run: mix ecto.migrate
        env:
          DATABASE_PORT: ${{ job.services.postgres.ports[5432] }}
      - run: mix coveralls.github || mix test
        env:
          DATABASE_PORT: ${{ job.services.postgres.ports[5432] }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  credo:
    name: Check Credo

    runs-on: ubuntu-latest

    env:
      MIX_ENV: dev

    steps:
      - uses: actions/checkout@v3
      - uses: erlef/setup-elixir@v1
        id: setupBEAM
        with:
          otp-version: ${{ inputs.otpVersion }}
          elixir-version: ${{ inputs.elixirVersion }}
      - uses: actions/cache@v2
        with:
          path: deps
          key: deps-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-${{ steps.setupBEAM.outputs.elixir-version }}-${{ hashFiles('mix.lock') }}
          restore-keys: |
            deps-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-${{ steps.setupBEAM.outputs.elixir-version }}-
      - run: mix deps.get
      - uses: actions/cache@v2
        with:
          path: _build/dev
          key: compile-${{ env.MIX_ENV }}-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-${{ steps.setupBEAM.outputs.elixir-version }}-${{ hashFiles('mix.lock') }}
          restore-keys: |
            compile-${{ env.MIX_ENV }}-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-${{ steps.setupBEAM.outputs.elixir-version }}-
      - run: mix deps.compile
      - run: mix compile --warning-as-errors
      - run: mix credo --strict

  dialyzer_plt:
    name: Generate Dialyzer PLT

    runs-on: ubuntu-latest

    env:
      MIX_ENV: dev
      DIALYZER_PLT_PRIV: true

    steps:
      - uses: actions/checkout@v3
      - uses: erlef/setup-elixir@v1
        id: setupBEAM
        with:
          otp-version: ${{ inputs.otpVersion }}
          elixir-version: ${{ inputs.elixirVersion }}
      - uses: actions/cache@v2
        with:
          path: deps
          key: deps-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-${{ steps.setupBEAM.outputs.elixir-version }}-${{ hashFiles('mix.lock') }}
          restore-keys: |
            deps-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-${{ steps.setupBEAM.outputs.elixir-version }}-
      - run: mix deps.get
      - uses: actions/cache@v2
        with:
          path: _build/dev
          key: compile-${{ env.MIX_ENV }}-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-${{ steps.setupBEAM.outputs.elixir-version }}-${{ hashFiles('mix.lock') }}
          restore-keys: |
            compile-${{ env.MIX_ENV }}-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-${{ steps.setupBEAM.outputs.elixir-version }}-
      - run: mix deps.compile
      - run: mix compile --warning-as-errors
      - uses: actions/cache@v2
        with:
          path: priv/plts/
          key: dialyzer_plt_dev-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-${{ steps.setupBEAM.outputs.elixir-version }}-${{ hashFiles('mix.lock') }}
          restore-keys: |
            dialyzer_plt_dev-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-${{ steps.setupBEAM.outputs.elixir-version }}-
      - run: mix dialyzer --plt
      - uses: actions/upload-artifact@v2
        with:
          name: dialyzer_plt_dev
          path: priv/plts/

  dialyzer_test:
    name: "Check Dialyzer"

    runs-on: ubuntu-latest

    needs: ['dialyzer_plt']

    env:
      MIX_ENV: dev
      DIALYZER_PLT_PRIV: true

    steps:
      - uses: actions/checkout@v3
      - uses: erlef/setup-elixir@v1
        id: setupBEAM
        with:
          otp-version: ${{ inputs.otpVersion }}
          elixir-version: ${{ inputs.elixirVersion }}
      - uses: actions/cache@v2
        with:
          path: deps
          key: deps-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-${{ steps.setupBEAM.outputs.elixir-version }}-${{ hashFiles('mix.lock') }}
          restore-keys: |
            deps-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-${{ steps.setupBEAM.outputs.elixir-version }}-
      - run: mix deps.get
      - uses: actions/cache@v2
        with:
          path: _build/dev
          key: compile-${{ env.MIX_ENV }}-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-${{ steps.setupBEAM.outputs.elixir-version }}-${{ hashFiles('mix.lock') }}
          restore-keys: |
            compile-${{ env.MIX_ENV }}-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-${{ steps.setupBEAM.outputs.elixir-version }}-
      - run: mix deps.compile
      - run: mix compile --warning-as-errors
      - uses: actions/download-artifact@v2
        with:
          name: dialyzer_plt_dev
          path: priv/plts/
      - run: mix dialyzer

  gettext_up_to_date:
    name: "Gettext Translations up-to-date"

    runs-on: ubuntu-latest

    env:
      MIX_ENV: dev

    steps:
      - uses: actions/checkout@v3
      - uses: erlef/setup-elixir@v1
        id: setupBEAM
        with:
          otp-version: ${{ inputs.otpVersion }}
          elixir-version: ${{ inputs.elixirVersion }}
      - uses: actions/cache@v2
        with:
          path: deps
          key: deps-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-${{ steps.setupBEAM.outputs.elixir-version }}-${{ hashFiles('mix.lock') }}
          restore-keys: |
            deps-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-${{ steps.setupBEAM.outputs.elixir-version }}-
      - run: mix deps.get
      - uses: actions/cache@v2
        with:
          path: _build/dev
          key: compile-${{ env.MIX_ENV }}-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-${{ steps.setupBEAM.outputs.elixir-version }}-${{ hashFiles('mix.lock') }}
          restore-keys: |
            compile-${{ env.MIX_ENV }}-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-${{ steps.setupBEAM.outputs.elixir-version }}-
      - run: mix deps.compile
      - run: mix compile --warning-as-errors
      - run: mix gettext.extract --check-up-to-date

  sobelow:
    runs-on: ubuntu-latest
    name: Sobelow Job

    steps:
      - uses: actions/checkout@v3
      - id: run-action
        uses: sobelow/action@v1
        with:
          flags: '--skip'
      - uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: results.sarif