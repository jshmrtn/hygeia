<div class="component-statistics-index container pt-3">
  <Context put={HygeiaWeb.Chart, enable_vision_impaired_mode: @enable_vision_impaired_mode}>
    <HygeiaWeb.StatisticsLive.Header tenant={@tenant} id="header" />

    <div class="component-statistics-index container pt-3">
      <div class="container">
        <Form for={assigns} change="params_change" opts={class: "mt-3 d-flex align-items-center"}>
          <Field name={:from} class="input-group w-auto">
            <div class="input-group-prepend">
              <span class="input-group-text">{gettext("From")}</span>
            </div>
            <DateInput class="form-control" />
          </Field>
          <Field name={:to} class="ml-2 input-group w-auto">
            <div class="input-group-prepend">
              <span class="input-group-text">{gettext("To")}</span>
            </div>
            <DateInput class="form-control" />
          </Field>
          <Field name={:enable_vision_impaired_mode} class="ml-2 w-auto">
            <Checkbox />
            <Label class="mb-0">
              {gettext("Enable Vision Impaired Mode")}
            </Label>
          </Field>
        </Form>
      </div>

      <div class="row mt-5">
        <div class="col-12 col-xl-6">
          <HygeiaWeb.Chart
            id="active_isolation_cases_per_day"
            dom_id="active_isolation_cases_per_day"
            config={%{
              type: "line",
              data: %{
                datasets: [
                  %{
                    label: gettext("Count"),
                    fill: %{target: "origin"},
                    data:
                      Enum.map(
                        @active_isolation_cases_per_day,
                        &%{
                          x: &1.date |> DateTime.new!(~T[00:00:00]) |> DateTime.to_unix(:millisecond),
                          y: &1.count
                        }
                      )
                  }
                ]
              },
              options: %{
                plugins: %{
                  title: %{
                    display: true,
                    text: gettext("People in Isolation")
                  }
                },
                scales: %{
                  x: %{
                    title: %{
                      display: true,
                      text: gettext("Date")
                    },
                    type: "time",
                    time: %{
                      unit: "day",
                      tooltipFormat: "DDDD",
                      displayFormats: %{
                        day: "D"
                      }
                    }
                  },
                  y: %{
                    stacked: true,
                    title: %{
                      display: true,
                      text: gettext("People")
                    },
                    beginAtZero: true,
                    ticks: %{
                      stepSize: 1
                    }
                  }
                }
              }
            }}
          />
        </div>
        <div class="col-12 col-xl-6 mt-5 mt-xl-0">
          <HygeiaWeb.Chart
            id="cumulative_index_case_end_reasons"
            dom_id="cumulative_index_case_end_reasons"
            config={%{
              type: "line",
              data: %{
                datasets:
                  @cumulative_index_case_end_reasons
                  |> Enum.reduce(%{}, fn %{date: date, count: count, end_reason: end_reason}, acc ->
                    entry = %{
                      x: date |> DateTime.new!(~T[00:00:00]) |> DateTime.to_unix(:millisecond),
                      y: count
                    }
            
                    Map.update(acc, end_reason, [entry], &[entry | &1])
                  end)
                  |> Enum.map(fn
                    {nil, entries} ->
                      %{
                        label: gettext("unknown"),
                        fill: %{target: "origin"},
                        data: Enum.reverse(entries)
                      }
            
                    {end_reason, entries} ->
                      %{
                        label: Hygeia.CaseContext.Case.Phase.Index.EndReason.translate(end_reason),
                        fill: %{target: "origin"},
                        data: Enum.reverse(entries)
                      }
                  end)
              },
              options: %{
                plugins: %{
                  title: %{
                    display: true,
                    text: gettext("Finished Isolations")
                  }
                },
                scales: %{
                  x: %{
                    title: %{
                      display: true,
                      text: gettext("Date")
                    },
                    type: "time",
                    time: %{
                      unit: "day",
                      tooltipFormat: "DDDD",
                      displayFormats: %{
                        day: "D"
                      }
                    }
                  },
                  y: %{
                    stacked: true,
                    title: %{
                      display: true,
                      text: gettext("Cases")
                    },
                    beginAtZero: true,
                    ticks: %{
                      stepSize: 1
                    }
                  }
                }
              }
            }}
          />
        </div>
      </div>

      <div class="row mt-5">
        <div class="col-12 col-xl-6">
          <HygeiaWeb.Chart
            id="active_quarantine_cases_per_day"
            dom_id="active_quarantine_cases_per_day"
            config={%{
              type: "line",
              data: %{
                datasets:
                  @active_quarantine_cases_per_day
                  |> Enum.reduce(%{}, fn %{date: date, count: count, type: type}, acc ->
                    entry = %{
                      x: date |> DateTime.new!(~T[00:00:00]) |> DateTime.to_unix(:millisecond),
                      y: count
                    }
            
                    Map.update(acc, type, [entry], &[entry | &1])
                  end)
                  |> Enum.map(fn {type, entries} ->
                    %{
                      label: case_phase_possible_index_type_translation(type),
                      fill: %{target: "origin"},
                      data: Enum.reverse(entries)
                    }
                  end)
              },
              options: %{
                plugins: %{
                  title: %{
                    display: true,
                    text: gettext("People in Quarantine")
                  }
                },
                scales: %{
                  x: %{
                    title: %{
                      display: true,
                      text: gettext("Date")
                    },
                    type: "time",
                    time: %{
                      unit: "day",
                      tooltipFormat: "DDDD",
                      displayFormats: %{
                        day: "D"
                      }
                    }
                  },
                  y: %{
                    stacked: true,
                    title: %{
                      display: true,
                      text: gettext("People")
                    },
                    beginAtZero: true,
                    ticks: %{
                      stepSize: 1
                    }
                  }
                }
              }
            }}
          />
        </div>
        <div class="col-12 col-xl-6 mt-5 mt-xl-0">
          <HygeiaWeb.Chart
            id="cumulative_possible_index_case_end_reasons"
            dom_id="cumulative_possible_index_case_end_reasons"
            config={%{
              type: "line",
              data: %{
                datasets:
                  @cumulative_possible_index_case_end_reasons
                  |> Enum.reduce(%{}, fn %{date: date, count: count, type: type, end_reason: end_reason},
                                         acc ->
                    entry = %{
                      x: date |> DateTime.new!(~T[00:00:00]) |> DateTime.to_unix(:millisecond),
                      y: count
                    }
            
                    Map.update(acc, {type, end_reason}, [entry], &[entry | &1])
                  end)
                  |> Enum.map(fn
                    {{type, nil}, entries} ->
                      %{
                        label:
                          case_phase_possible_index_type_translation(type) <> " / " <> gettext("unknown"),
                        fill: %{target: "origin"},
                        data: Enum.reverse(entries)
                      }
            
                    {{type, end_reason}, entries} ->
                      %{
                        label:
                          case_phase_possible_index_type_translation(type) <>
                            " / " <> case_phase_possible_index_end_reason_translation(end_reason),
                        fill: %{target: "origin"},
                        data: Enum.reverse(entries)
                      }
                  end)
              },
              options: %{
                plugins: %{
                  title: %{
                    display: true,
                    text: gettext("Quarantine End Reasons")
                  },
                  legend: %{
                    display: false
                  }
                },
                scales: %{
                  x: %{
                    title: %{
                      display: true,
                      text: gettext("Date")
                    },
                    type: "time",
                    time: %{
                      unit: "day",
                      tooltipFormat: "DDDD",
                      displayFormats: %{
                        day: "D"
                      }
                    }
                  },
                  y: %{
                    stacked: true,
                    title: %{
                      display: true,
                      text: gettext("Cases")
                    },
                    beginAtZero: true,
                    ticks: %{
                      stepSize: 1
                    }
                  }
                }
              }
            }}
          />
        </div>
      </div>

      <div class="row mt-5">
        <div class="col-12 col-xl-6">
          <HygeiaWeb.Chart
            id="new_cases_per_day"
            dom_id="new_cases_per_day"
            config={%{
              type: "line",
              data: %{
                datasets:
                  @new_cases_per_day
                  |> Enum.reduce(%{}, fn %{date: date, count: count, type: type, sub_type: sub_type}, acc ->
                    entry = %{
                      x: date |> DateTime.new!(~T[00:00:00]) |> DateTime.to_unix(:millisecond),
                      y: count
                    }
            
                    Map.update(acc, {type, sub_type}, [entry], &[entry | &1])
                  end)
                  |> Enum.map(fn
                    {{:index, nil}, entries} ->
                      %{
                        label: gettext("Index"),
                        fill: %{target: "origin"},
                        data: Enum.reverse(entries)
                      }
            
                    {{:possible_index, sub_type}, entries} ->
                      %{
                        label: case_phase_possible_index_type_translation(sub_type),
                        fill: %{target: "origin"},
                        data: Enum.reverse(entries)
                      }
                  end)
              },
              options: %{
                plugins: %{
                  title: %{
                    display: true,
                    text: gettext("New Cases")
                  }
                },
                scales: %{
                  x: %{
                    title: %{
                      display: true,
                      text: gettext("Date")
                    },
                    type: "time",
                    time: %{
                      unit: "day",
                      tooltipFormat: "DDDD",
                      displayFormats: %{
                        day: "D"
                      }
                    }
                  },
                  y: %{
                    stacked: true,
                    title: %{
                      display: true,
                      text: gettext("Cases")
                    },
                    beginAtZero: true,
                    ticks: %{
                      stepSize: 1
                    }
                  }
                }
              }
            }}
          />
        </div>
        <div class="col-12 col-xl-6 mt-5 mt-xl-0">
          <HygeiaWeb.Chart
            id="active_hospitalization_cases_per_day"
            dom_id="active_hospitalization_cases_per_day"
            config={%{
              type: "line",
              data: %{
                datasets: [
                  %{
                    label: gettext("Count"),
                    fill: %{target: "origin"},
                    data:
                      Enum.map(
                        @active_hospitalization_cases_per_day,
                        &%{
                          x: &1.date |> DateTime.new!(~T[00:00:00]) |> DateTime.to_unix(:millisecond),
                          y: &1.count
                        }
                      )
                  }
                ]
              },
              options: %{
                plugins: %{
                  title: %{
                    display: true,
                    text: gettext("People in Hospital")
                  }
                },
                scales: %{
                  x: %{
                    title: %{
                      display: true,
                      text: gettext("Date")
                    },
                    type: "time",
                    time: %{
                      unit: "day",
                      tooltipFormat: "DDDD",
                      displayFormats: %{
                        day: "D"
                      }
                    }
                  },
                  y: %{
                    stacked: true,
                    title: %{
                      display: true,
                      text: gettext("People")
                    },
                    beginAtZero: true,
                    ticks: %{
                      stepSize: 1
                    }
                  }
                }
              }
            }}
          />
        </div>
      </div>

      <div class="row mt-5">
        <div class="col-12 col-xl-6">
          <HygeiaWeb.Chart
            id="active_complexity_cases_per_day"
            dom_id="active_complexity_cases_per_day"
            config={%{
              type: "line",
              data: %{
                datasets:
                  @active_complexity_cases_per_day
                  |> Enum.reduce(%{}, fn %{date: date, count: count, case_complexity: case_complexity}, acc ->
                    entry = %{
                      x: date |> DateTime.new!(~T[00:00:00]) |> DateTime.to_unix(:millisecond),
                      y: count
                    }
            
                    Map.update(acc, case_complexity, [entry], &[entry | &1])
                  end)
                  |> Enum.map(fn
                    {nil, entries} ->
                      %{
                        label: gettext("unknown"),
                        fill: %{target: "origin"},
                        data: Enum.reverse(entries)
                      }
            
                    {case_complexity, entries} ->
                      %{
                        label: case_complexity_translation(case_complexity),
                        fill: %{target: "origin"},
                        data: Enum.reverse(entries)
                      }
                  end)
              },
              options: %{
                plugins: %{
                  title: %{
                    display: true,
                    text: gettext("Complexity")
                  }
                },
                scales: %{
                  x: %{
                    title: %{
                      display: true,
                      text: gettext("Date")
                    },
                    type: "time",
                    time: %{
                      unit: "day",
                      tooltipFormat: "DDDD",
                      displayFormats: %{
                        day: "D"
                      }
                    }
                  },
                  y: %{
                    stacked: true,
                    title: %{
                      display: true,
                      text: gettext("Cases")
                    },
                    beginAtZero: true,
                    ticks: %{
                      stepSize: 1
                    }
                  }
                }
              }
            }}
          />
        </div>
        <div class="col-12 col-xl-6 mt-5 mt-xl-0">
          <HygeiaWeb.Chart
            id="active_infection_place_cases_per_day"
            dom_id="active_infection_place_cases_per_day"
            config={%{
              type: "line",
              data: %{
                datasets:
                  @active_infection_place_cases_per_day
                  |> Enum.reduce(%{}, fn %{
                                           date: date,
                                           count: count,
                                           infection_place_type: infection_place_type
                                         },
                                         acc ->
                    entry = %{
                      x: date |> DateTime.new!(~T[00:00:00]) |> DateTime.to_unix(:millisecond),
                      y: count
                    }
            
                    Map.update(acc, infection_place_type, [entry], &[entry | &1])
                  end)
                  |> Enum.map(fn
                    {nil, entries} ->
                      %{
                        label: gettext("unknown"),
                        fill: %{target: "origin"},
                        data: Enum.reverse(entries)
                      }
            
                    {infection_place_type, entries} ->
                      %{
                        label: translate_infection_place_type(infection_place_type),
                        fill: %{target: "origin"},
                        data: Enum.reverse(entries)
                      }
                  end)
              },
              options: %{
                plugins: %{
                  title: %{
                    display: true,
                    text: gettext("Infection Place")
                  },
                  legend: %{
                    display: false
                  }
                },
                scales: %{
                  x: %{
                    title: %{
                      display: true,
                      text: gettext("Date")
                    },
                    type: "time",
                    time: %{
                      unit: "day",
                      tooltipFormat: "DDDD",
                      displayFormats: %{
                        day: "D"
                      }
                    }
                  },
                  y: %{
                    stacked: true,
                    title: %{
                      display: true,
                      text: gettext("People")
                    },
                    beginAtZero: true,
                    ticks: %{
                      stepSize: 1
                    }
                  }
                }
              }
            }}
          />
        </div>
      </div>

      <div class="row mt-5">
        <div class="col-12 col-xl-6">
          <HygeiaWeb.Chart
            id="transmission_country_cases_per_day"
            dom_id="transmission_country_cases_per_day"
            config={%{
              type: "line",
              data: %{
                datasets:
                  @transmission_country_cases_per_day
                  |> Enum.reduce(%{}, fn %{date: date, count: count, country: country}, acc ->
                    entry = %{
                      x: date |> DateTime.new!(~T[00:00:00]) |> DateTime.to_unix(:millisecond),
                      y: count
                    }
            
                    Map.update(acc, country, [entry], &[entry | &1])
                  end)
                  |> Enum.map(fn
                    {nil, entries} ->
                      %{
                        label: gettext("unknown"),
                        fill: %{target: "origin"},
                        data: Enum.reverse(entries)
                      }
            
                    {country, entries} ->
                      %{
                        label: country_name(country),
                        fill: %{target: "origin"},
                        data: Enum.reverse(entries)
                      }
                  end)
              },
              options: %{
                plugins: %{
                  title: %{
                    display: true,
                    text: gettext("Country")
                  },
                  legend: %{
                    display: false
                  }
                },
                scales: %{
                  x: %{
                    title: %{
                      display: true,
                      text: gettext("Date")
                    },
                    type: "time",
                    time: %{
                      unit: "day",
                      tooltipFormat: "DDDD",
                      displayFormats: %{
                        day: "D"
                      }
                    }
                  },
                  y: %{
                    stacked: true,
                    title: %{
                      display: true,
                      text: gettext("Cases")
                    },
                    beginAtZero: true,
                    ticks: %{
                      stepSize: 1
                    }
                  }
                }
              }
            }}
          />
        </div>
      </div>
    </div>
  </Context>
</div>
