<div class="component-case-protocol container">
  <Context get={HygeiaWeb, timezone: timezone}>
    <HygeiaWeb.PersonLive.Header person={@case.person} id="header" />

    <div class="card">
      <div class="card-header">
        <HygeiaWeb.CaseLive.Navigation case={@case} id="navigation" />
      </div>
      <div class="card-body">
        <table class="protocol-table table table-sm">
          <thead>
            <tr>
              <th class="col-type" scope="col">
                {pgettext("Protocol Entry", "Type")}
              </th>
              <th class="col-date" scope="col">
                {pgettext("Protocol Entry", "Date")}
              </th>
              <th scope="col">
                {schema_field_name(:origin, Version)}
              </th>
              <th class="col-author" scope="col">
                {schema_field_name(:originator, Version)}
              </th>
              <th class="col-meta" scope="col" colspan="2">
                {pgettext("Protocol Entry", "Entry")}
              </th>
            </tr>
          </thead>
          <tbody>
            <HygeiaWeb.RecordView
              resource={entry}
              action={:details}
              :for={{uuid, inserted_at, entry, version} <- Enum.reverse(@protocol_entries)}
              id={"protocol_entry_#{uuid}"}
              wrapper_tag={:tr}
            >
              <td>{module_translation(entry.__struct__)}</td>
              <td>
                <time
                  datetime={NaiveDateTime.to_iso8601(inserted_at)}
                  title={inserted_at |> DateTime.shift_zone!(timezone) |> HygeiaCldr.DateTime.to_string!()}
                >
                  {HygeiaCldr.DateTime.Relative.to_string!(inserted_at,
                    format: :short,
                    relative_to: @now
                  )}
                </time>
              </td>
              <td>
                {unless is_nil(version.origin), do: Version.Origin.translate(version.origin)}
              </td>
              <td>
                <Link to={Routes.user_show_path(@socket, :show, version.user)} :if={version.user != nil}>
                  {version.user.display_name}
                </Link>
              </td>
              <td colspan="2" :if={match?(%Hygeia.CaseContext.Note{}, entry)}>
                <div class="preserve-linebreaks">{entry.note}</div>
              </td>
              <td colspan="2" :if={match?(%Hygeia.CommunicationContext.Email{}, entry)}>
                <Context
                  put={__MODULE__, message: RFC2822.parse(entry.message)}
                  get={__MODULE__, message: message}
                >
                  <b>{schema_field_name(:subject, Hygeia.CommunicationContext.Email)}:</b>
                  {Message.get_header(message, "subject")}<br>

                  <b>{schema_field_name(:to, Hygeia.CommunicationContext.Email)}:</b>
                  {format_recipients(Message.get_header(message, "to"))}<br>

                  <b>{schema_field_name(:status, Hygeia.CommunicationContext.Email)}:</b>
                  {email_status(entry.status)}<br>

                  <details
                    if={Message.is_text_part?(message)}
                    id={"protocol_entry_#{uuid}_summary"}
                    phx-update="ignore"
                  >
                    <summary class="text-primary">
                      <b>{schema_field_name(:body, Hygeia.CommunicationContext.Email)}</b><br>
                    </summary>
                    <div class="preserve-linebreaks">{message.body}</div>
                  </details>
                </Context>
              </td>
              <td colspan="2" :if={match?(%Hygeia.CommunicationContext.SMS{}, entry)}>
                <b>{schema_field_name(:number, Hygeia.CommunicationContext.SMS)}:</b>
                {entry.number}<br>

                <b>{schema_field_name(:status, Hygeia.CommunicationContext.SMS)}:</b>
                {sms_status(entry.status)}<br>

                <div class="preserve-linebreaks">{entry.message}</div>
              </td>
            </HygeiaWeb.RecordView>
            <tr :if={length(@protocol_entries) == 0}>
              <td colspan="5">
                <div class="d-flex justify-content-center py-3">
                  {gettext("No data to display")}
                </div>
              </td>
            </tr>
          </tbody>
        </table>
      </div>
    </div>
  </Context>
</div>
